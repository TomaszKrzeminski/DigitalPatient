@page "/taskhub"
@inject NavigationManager navigationManager
@using Microsoft.AspNetCore.SignalR.Client;




@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.AspNetCore.SignalR



@inject NavigationManager NavigationManager


@using System.Net.Http
@using System.Net.Http.Json

@using System;

@using System.Net.Http.Headers;
@using System.Threading.Tasks;
@using Microsoft.AspNetCore.Http.Connections;
@using System.Net



@inject NavigationManager navigationManager



@using Microsoft.AspNetCore.Components.Forms
@using Digital_Patient.Models
@using Digital_Patient.Data
@inject NavigationManager Navigation
@using Microsoft.EntityFrameworkCore.Design
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.JSInterop
@using Microsoft.EntityFrameworkCore













<h1>Update Task   @Action</h1>



@code {

    private string TaskId { get; set; }
    private string TaskDescriptionMessage { get; set; }
    private HubConnection? hubConnection;
    private bool Action { get; set; } = false;
    //[Inject]
    //public CookiesProvider CookiesProvider { get; set; }
    protected override async Task OnInitializedAsync()
    {


        //var container = new CookieContainer();
        //var cookie = new Cookie()
        //{
        //    Name = ".AspNetCore.Identity.Application",
        //    Domain = "localhost",
        //    Value = CookiesProvider.Cookie
        //};

        //container.Add(cookie);







        //      hubConnection = new HubConnectionBuilder()
        //.WithUrl(NavigationManager.ToAbsoluteUri("/taskhub"), options =>
        //{
        //        // Pass the security cookie to the Hub. This is the way to do
        //        // that in your case. In other cases, you may need to pass
        //        // an access token, but not here......
        //        options.Cookies = container;
        //}).Build();










        //hubConnection = new HubConnectionBuilder()
        //.WithUrl(navigationManager.ToAbsoluteUri("/taskhub"))
        //.Build();

        //hubConnection.On<int>("UpdateTask", (TaskId) =>
        //{
        //    Action = true;
        //    //// call  refresh tasks and view messages

        //    InvokeAsync(StateHasChanged);
        //});

        //await hubConnection.StartAsync();
    }




}
